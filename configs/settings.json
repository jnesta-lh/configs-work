// This is a copy of the complete template.
{
  // ----------------
  // Vanilla settings
  // ----------------

  "editor.fontSize": 14, // 14 is default.

  // This matches the Airbnb JavaScript style guide.
  "editor.rulers": [100],
  "editor.tabSize": 2,

  "files.associations": {
    ".env*": "shellscript" // e.g. ".env.example" is the same as ".env".
  },

  // We want to always use "lf" to be consistent with all platforms.
  "files.eol": "\n",

  // Automatically remove all trailing whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // Configure glob patterns for excluding files and folders in full text searches and quick open.
  "search.exclude": {
    "**/*.mp3": true,
    "**/*.png": true,
    "**/*.svg": true,
    "**/*.wav": true,
    "**/.yarn/": true,
    "**/dist/": true,
    "**/node_modules/": true,
    "bun.lockb": true,
    "LICENSE": true,
    "package-lock.json": true,
    "pnpm-lock.yaml": true,
    "yarn.lock": true
  },

  // ------------------
  // Extension settings
  // ------------------

  // Use Prettier to format "cspell.config.jsonc".
  "cSpell.autoFormatConfigFile": true,

  // -----------------
  // Language settings
  // -----------------

  // By default, VSCode will not automatically fill-in function arguments.
  "javascript.suggest.completeFunctionCalls": true,
  "typescript.suggest.completeFunctionCalls": true,

  // By default, VSCode will prefer non-relative paths for deeply nested files.
  "javascript.preferences.importModuleSpecifier": "relative",
  "typescript.preferences.importModuleSpecifier": "relative",

  // By default, VSCode will not add `import type` automatically.
  "typescript.preferences.preferTypeOnlyAutoImports": true,

  // Show TypeScript errors for files that don't happen to be currently open, which makes TypeScript
  // work similar to other compiled languages like Golang or Rust.
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,

  // Automatically run the formatter when certain files are saved.
  "[javascript][typescript][javascriptreact][typescriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[css][html][json][jsonc][markdown][postcss][yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[terraform][terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true
  },

  // -----------------
  // Personal settings
  // -----------------

  "explorer.confirmDelete": false,
  "editor.renderWhitespace": "all",
  "editor.wordWrap": "on",
  "git.openRepositoryInParentFolders": "never",
  "security.allowedUNCHosts": ["wsl$"],
  "security.workspace.trust.untrustedFiles": "open",
  "update.showReleaseNotes": false,
  "window.title": "${activeEditorLong}${separator}${rootName}",
  "workbench.editor.enablePreview": false, // Stop opening files in "preview" mode.
  "workbench.startupEditor": "none", // Stop the welcome screen.

  // Extension settings
  "cSpell.useCustomDecorations": false,
  "redhat.telemetry.enabled": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "chat.commandCenter.enabled": false,
  "remote.SSH.remotePlatform": {
    "ubuntu-hyper-v": "linux"
  },
  "python.createEnvironment.trigger": "off"
}
